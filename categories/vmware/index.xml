<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VMware on Encore Technologies - DevOps Blog</title>
    <link>https://encoretechnologies.github.io/categories/vmware/</link>
    <description>Recent content in VMware on Encore Technologies - DevOps Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 07 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://encoretechnologies.github.io/categories/vmware/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Utilizing Chatops for VMWare Support Cases</title>
      <link>https://encoretechnologies.github.io/blog/2020/05/chatops_vmware_host_log_collection/</link>
      <pubDate>Thu, 07 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://encoretechnologies.github.io/blog/2020/05/chatops_vmware_host_log_collection/</guid>
      <description>In this post we will be explaining how we have created a chatops workflow that enables us to upload VMWare ESXi log bundles directly to a VMWare support case from our chat client of choice. The code that makes all of this work is at the bottom of this article.
Chatops Introduction For the those who have never heard of chatops before; To me, it means the ability to call automation workflows from your favorite chat client.</description>
    </item>
    
    <item>
      <title>Changing iSCSI LoginTimeout with PowerCLI</title>
      <link>https://encoretechnologies.github.io/blog/2020/03/vmware-iscsi-timeout/</link>
      <pubDate>Thu, 05 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://encoretechnologies.github.io/blog/2020/03/vmware-iscsi-timeout/</guid>
      <description>In this blog post we will be explaining how we are changing the iSCSI LoginTimeout and the reasons why we are doing it in this method.
Background Recently we were going through a code upgrade on our storage arrays and one of the recommendations from Pure support is to increase the iSCSI LoginTimeout prior to upgrading the code. For the uninitiated, VMware defines the LoginTimeout as &amp;ldquo;Time in seconds the initiator will wait for the login response to finish.</description>
    </item>
    
    <item>
      <title>Automated addition of VMware VM to Host Affinity Rules</title>
      <link>https://encoretechnologies.github.io/blog/2019/01/vmware-affinity-rules/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://encoretechnologies.github.io/blog/2019/01/vmware-affinity-rules/</guid>
      <description>Background VMware Affinity rules can solve many issues in a virtualized environment with out the need to create different clusters or datacenters to separate Virtual Machines. The specific need that we at Encore had for this was that when a vm is being cloned, if the VM was migrated to a different Host due to a vMotion, the custom spec with Kickstart files or Autounattended Syspreps would fail.
This was a random error that would only happened when vCenter or a host was overloaded.</description>
    </item>
    
    <item>
      <title>Automated addition of VMware Disks and Controllers</title>
      <link>https://encoretechnologies.github.io/blog/2017/10/vmware-disks/</link>
      <pubDate>Thu, 19 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://encoretechnologies.github.io/blog/2017/10/vmware-disks/</guid>
      <description>When adding disks to VMware VM using Python we need to use the pyVmomi VMware SOAP API to communicate with vCenter. pyVmomi gives us a lot of very helpful features that take out a lot of the guess work in adding new disks to a VMware VM.
You can install pyVmomi from pip into a virtualenv like the following:
virtualenv ~/vmware source ~/vmware/bin/activate pip install pyvmomi  VMware Connection pyVmomi makes it really easy to connect to the VMware vCenter environment to query information and perform all the necessary tasks needed.</description>
    </item>
    
  </channel>
</rss>