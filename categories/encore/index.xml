<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Encore on Encore Technologies - DevOps Blog</title>
    <link>https://encoretechnologies.github.io/categories/encore/</link>
    <description>Recent content in Encore on Encore Technologies - DevOps Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 16 Oct 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://encoretechnologies.github.io/categories/encore/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>V D Why?</title>
      <link>https://encoretechnologies.github.io/blog/2018/10/vdi-p001/</link>
      <pubDate>Tue, 16 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://encoretechnologies.github.io/blog/2018/10/vdi-p001/</guid>
      <description>Virtual Desktops are a topic that runs hot and cold through the enterprise space. Many enterprises begin pilots and projects in the space before building a clearly defined plan, and these are the environments that need additional remediation down the road. Before we start in with architecture, getting a firm answer to “Why do we need them?” is critical to a successfully scope, cost, and validate the design. This month we will focus on the security use case which is one of the ‘easy wins’ for virtual end user compute.</description>
    </item>
    
    <item>
      <title>Automating Red Hat Enterprise Linux Patching with Ansible (Part 2 0f 2)</title>
      <link>https://encoretechnologies.github.io/blog/2018/06/ansiblepatchingautomation2/</link>
      <pubDate>Wed, 13 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://encoretechnologies.github.io/blog/2018/06/ansiblepatchingautomation2/</guid>
      <description>In this second installment of a two-part series, we&amp;rsquo;ll be going over Phase Two, the build out of standard pre- and post-patching automation, and Phase Three, the build out of application-specific pre- and post-patching automation. Click here for Phase One.
Status Report With basic patching and reboots automated, a patching session for application environments without any special pre-patching and post-patching activities was reduced from 20 minutes per server, down to 6 minutes per server.</description>
    </item>
    
    <item>
      <title>Automating Red Hat Enterprise Linux Patching with Ansible (Part 1 of 2)</title>
      <link>https://encoretechnologies.github.io/blog/2018/06/ansiblepatchingautomation/</link>
      <pubDate>Tue, 05 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://encoretechnologies.github.io/blog/2018/06/ansiblepatchingautomation/</guid>
      <description>In this first installment of a two-part series, we&amp;rsquo;ll be going over Phase One, the build out of the &amp;ldquo;core&amp;rdquo; patching and reboot functionality on Ansible.
History Around a year ago, we began working with a customer whose Red Hat Enterprise Linux (RHEL) 6 and 7 OS patching process was being conducted manually. This required highly skilled administrators focused solely on patching. Documentation was eschewed in favor of tribal knowledge and manual command entry at the command line presented moderate to high risk during server patching.</description>
    </item>
    
    <item>
      <title>Automated Editing and Addition of ServiceNow CIs</title>
      <link>https://encoretechnologies.github.io/blog/2017/10/servicenow-automation/</link>
      <pubDate>Mon, 23 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://encoretechnologies.github.io/blog/2017/10/servicenow-automation/</guid>
      <description>The following is a quick tutorial on using the ServiceNow API with python to programatically create and update configuration items. A personal development instance of ServiceNow Jakarta was used for testing the code below.

About the ServiceNow API Servicenow uses a REST Table API that allows users to perform create, read, update and delete operations on existing tables. ServiceNow also provides you with a REST API Explorer that uses information from your instance to provide you with a list of endpoints, methods, and variables that you can use to build and send a REST request.</description>
    </item>
    
    <item>
      <title>New Blog</title>
      <link>https://encoretechnologies.github.io/blog/2017/09/intro/</link>
      <pubDate>Sat, 30 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://encoretechnologies.github.io/blog/2017/09/intro/</guid>
      <description>Welcome to the Encore DevOps blog!
We on the DevOps team have been working for about a year and a half building tons of automation solutions for Encore&amp;rsquo;s Managed Services customers. Up until now we haven&amp;rsquo;t had a place to publicly showcase the more technical work that we&amp;rsquo;ve been doing. This blog serves as a new space for our engineers to share their experiences around new and innovating technologies we&amp;rsquo;re exploring.</description>
    </item>
    
  </channel>
</rss>