<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Patch on Encore Technologies - DevOps Blog</title>
    <link>https://encoretechnologies.github.io/categories/patch/</link>
    <description>Recent content in Patch on Encore Technologies - DevOps Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://encoretechnologies.github.io/categories/patch/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Automating Red Hat Enterprise Linux Patching with Ansible (Part 1 of 2)</title>
      <link>https://encoretechnologies.github.io/blog/2018/06/ansiblepatchingautomation/</link>
      <pubDate>Tue, 05 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://encoretechnologies.github.io/blog/2018/06/ansiblepatchingautomation/</guid>
      <description>In this first installment of a two-part series, we&amp;rsquo;ll be going over Phase One, the build out of the &amp;ldquo;core&amp;rdquo; patching and reboot functionality on Ansible.
History Around a year ago, we began working with a customer who&amp;rsquo;s Red Hat Enterprise Linux (RHEL) 6 and 7 OS patching process was being conducted manually. This required highly skilled administrators focused solely on patching. Documentation was eschewed in favor of tribal knowledge and manual command entry at the command line presented moderate to high risk during server patching.</description>
    </item>
    
  </channel>
</rss>