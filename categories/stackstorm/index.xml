<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>StackStorm on Encore Technologies - DevOps Blog</title>
    <link>https://encoretechnologies.github.io/categories/stackstorm/</link>
    <description>Recent content in StackStorm on Encore Technologies - DevOps Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 07 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://encoretechnologies.github.io/categories/stackstorm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Utilizing Chatops for VMWare Support Cases</title>
      <link>https://encoretechnologies.github.io/blog/2020/05/chatops_vmware_host_log_collection/</link>
      <pubDate>Thu, 07 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://encoretechnologies.github.io/blog/2020/05/chatops_vmware_host_log_collection/</guid>
      <description>In this post we will be explaining how we have created a chatops workflow that enables us to upload VMWare ESXi log bundles directly to a VMWare support case from our chat client of choice. The code that makes all of this work is at the bottom of this article.
Chatops Introduction For the those who have never heard of chatops before; To me, it means the ability to call automation workflows from your favorite chat client.</description>
    </item>
    
    <item>
      <title>How StackStorm Changed Our Lives</title>
      <link>https://encoretechnologies.github.io/blog/2018/03/stackstorm-changed-our-lives/</link>
      <pubDate>Fri, 09 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://encoretechnologies.github.io/blog/2018/03/stackstorm-changed-our-lives/</guid>
      <description>We started playing around with StackStorm about 9 months ago just to try out some new tools. After a few months of playing around we realized that it was much more than a toy and could provide serious benefits to our DevOps team, our organization and to our customers. Before we discuss all of the great things about StackStorm, let&amp;rsquo;s start with a little history.
History When I started at Encore in June of 2016 the team had just started working on an automation platform.</description>
    </item>
    
    <item>
      <title>Implementing 2-Factor Auth For Workflows In StackStorm Using Inquiries</title>
      <link>https://encoretechnologies.github.io/blog/2017/10/stackstorm-inquiries/</link>
      <pubDate>Tue, 31 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://encoretechnologies.github.io/blog/2017/10/stackstorm-inquiries/</guid>
      <description>A common request I have seen on the StackStorm Slack Channel is the ability to utilize 2-factor auth before executing a workflow. Users sometimes have very powerful workflows that require extra care, or a second set of eyes before executing. Inquiries are an experimental feature in StackStorm 2.5 (changelog) that allow the workflow to pause and wait for input from a user before proceeding. In this post we&amp;rsquo;re going to use inquiries to secure a workflow execution using Duo 2-factor authentication (2FA).</description>
    </item>
    
    <item>
      <title>Automated creation of StackStorm Packs</title>
      <link>https://encoretechnologies.github.io/blog/2017/10/automated-creation-of-stackstorm-packs/</link>
      <pubDate>Sun, 15 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://encoretechnologies.github.io/blog/2017/10/automated-creation-of-stackstorm-packs/</guid>
      <description>In StackStorm a pack is logical organization that contains related actions, aliases, policies, rules and sensors. To get a good overview of what a pack is please see the excellent StackStorm Pack documentation.
Most users of StackStorm wish to either integrate with a new system that&amp;rsquo;s not available in the Exchange or use StackStorm to execute custom automation scripts. The way to accomplish this is to create a new Pack.</description>
    </item>
    
  </channel>
</rss>